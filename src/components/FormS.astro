---
const { form } = Astro.props;

// Convert labels to slug-safe names for Netlify compatibility
function toSlug(text: string) {
  return text.toLowerCase().replace(/\s+/g, '-');
}
---

<form
  name={form.name}
  method="POST"
  data-netlify="true"
  netlify-honeypot="bot-field"
>
  <!-- Hidden field ensures Netlify recognizes the form -->
  <input type="hidden" name="form-name" value={form.name} />

  {form.headline && <h2>{form.headline}</h2>}

  <ul>
    {
      form.formFields &&
        form.formFields.map(
          (field: {
            label: string;
            type: string;
            required?: boolean;
            options?: { label: string; value: string }[];
          }) => {
            const isRequired = field.required ? true : false;
            const fieldName = toSlug(field.label); // Convert field label to a safe name

            switch (field.type) {
              case 'text':
              case 'email':
              case 'tel':
              case 'number':
              case 'date':
                return (
                  <li>
                    <label for={fieldName}>
                      {field.label}
                      <input
                        id={fieldName}
                        type={field.type}
                        name={fieldName}
                        required={isRequired}
                      />
                    </label>
                  </li>
                );
              case 'textarea':
                return (
                  <li>
                    <label for={fieldName}>
                      {field.label}
                      <textarea
                        id={fieldName}
                        name={fieldName}
                        required={isRequired}
                      />
                    </label>
                  </li>
                );
              case 'checkbox':
                return (
                  <li>
                    <label for={fieldName}>
                      <input
                        id={fieldName}
                        type="checkbox"
                        name={fieldName}
                        required={isRequired}
                      />
                      {field.label}
                    </label>
                  </li>
                );
              case 'radio':
                return (
                  <li>
                    <fieldset>
                      <legend>{field.label}</legend>
                      {field.options &&
                        field.options.map((option) => {
                          const optionName = toSlug(option.label);
                          return (
                            <label for={`${fieldName}-${optionName}`}>
                              <input
                                id={`${fieldName}-${optionName}`}
                                type="radio"
                                name={fieldName}
                                value={option.value}
                                required={isRequired}
                              />
                              {option.label}
                            </label>
                          );
                        })}
                    </fieldset>
                  </li>
                );
              case 'select':
                return (
                  <li>
                    <label for={fieldName}>
                      {field.label}
                      <select
                        id={fieldName}
                        name={fieldName}
                        required={isRequired}
                      >
                        {field.options &&
                          field.options.map((option) => (
                            <option value={option.value}>
                              {option.label}
                            </option>
                          ))}
                      </select>
                    </label>
                  </li>
                );
              default:
                return null;
            }
          }
        )
    }
  </ul>

  <!-- Honeypot Field (Hidden from Users, Visible to Bots) -->
  <input type="text" name="bot-field" style="display: none;" />

  <button type="submit">Submit</button>
</form>
