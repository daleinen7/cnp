---
import type { SanityDocument } from '@sanity/client';
import { loadQuery } from '../../sanity/lib/loadQuery';
import Headline from '../../components/Headline.astro';
import SideBySide from '../../components/SideBySide.astro';

export async function getStaticPaths() {
  const { data: page } = await loadQuery<SanityDocument[]>({
    query: `*[_type == "page"]`,
  });

  return page.map((page: SanityDocument) => {
    const { slug } = page;
    return {
      params: {
        slug: slug.current,
      },
    };
  });
}

const { params } = Astro;

const { data: page } = await loadQuery<SanityDocument>({
  query: `*[_type == "page" && slug.current == $slug][0]`,
  params,
});

const components = page.components || [];

console.log('PAGE: ', page);
---

<h1>{page.title}</h1>

{
  components.map(
    (component: { _type: any; headline: string; text: any[] }) => {
      switch (component._type) {
        case 'headline':
          return <Headline headline={component.headline} />;
        case 'sideBySide':
          return (
            <SideBySide
              headline={component.headline}
              text={component.text}
            />
          );
        default:
          return null;
      }
    }
  )
}
