---
import PortableText from './PortableText.astro';

const { headline, text, imageLeft, figureCaption, image } =
  Astro.props;
const sideBySideClass = imageLeft ? 'image-left' : 'image-right';
---

<div class={`side-by-side wrapper ${sideBySideClass}`}>
  {headline && <h3>{headline}</h3>}
  {
    image && (
      <figure>
        <img src={image} alt="Placeholder image" />
        {figureCaption && <figcaption>{figureCaption}</figcaption>}
      </figure>
    )
  }
  {
    text && (
      <div class="info">
        <PortableText portableText={text} />
      </div>
    )
  }
</div>

<style>
  .side-by-side {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    gap: 1rem;
  }

  h3 {
    margin-block: 0 1rem;
    font-size: 2.5rem;
    font-weight: 600;
    order: 1; /* Heading always on top */
  }

  .info {
    display: flex;
    flex-direction: column;
    justify-content: center;
    gap: 1rem;
    max-width: 100%;
  }

  img {
    width: 100%;
    border-radius: var(--radius);
  }

  figure {
    width: 100%;
  }

  figcaption {
    padding-block: 1rem;
  }

  /* Mobile-first layout: Heading > Image > Text */
  .info {
    order: 3;
  }
  figure {
    order: 2;
  }

  /* Desktop-specific layout */
  @media (min-width: 990px) {
    .side-by-side {
      flex-direction: row;
      flex-wrap: wrap;
      align-items: flex-start;
      gap: 1.5rem;
    }

    h3 {
      width: 100%;
      text-align: center;
      order: 1; /* Heading stays on top */
    }

    .image-left .info {
      order: 2;
    }

    .image-left figure {
      order: 3;
    }

    .image-right .info {
      order: 3;
    }

    .image-right figure {
      order: 2;
    }

    .info {
      max-width: 47%;
    }

    figure {
      width: 50%;
    }
  }
</style>
