---
interface Card {
  title?: string;
  slug?: { current: string };
  featuredImage?: string;
  excerpt?: string;
}

const { blogList } = Astro.props;
const truncate = (text: string, length: number) => {
  if (text.length <= length) return text;

  let truncated = text.substring(0, length);
  let lastSpaceIndex = truncated.lastIndexOf(' ');

  if (lastSpaceIndex > 0) {
    truncated = truncated.substring(0, lastSpaceIndex);
  }

  return truncated + '...';
};
---

<ul class="cards wrapper">
  {
    blogList &&
      blogList.map((card: Card) => {
        const { featuredImage, excerpt, title, slug } = card;
        return (
          <figure
            class="card"
            onclick={`window.location.href='/blog/${slug?.current}'`}
          >
            {featuredImage && <img src={featuredImage} />}
            <figcaption>
              {title && <h3>{title}</h3>}
              {excerpt && <p>{excerpt}</p>}
              {<span>Learn More</span>}
            </figcaption>
          </figure>
        );
      })
  }
</ul>

<style>
  .cards {
    display: grid;
    grid-template-columns: 1fr;
    grid-template-rows: auto;
    justify-items: center;
    gap: 1.5rem;
    margin: 0 auto;
  }
  .card {
    width: 1fr;
  }
  figure {
    display: flex;
    flex-direction: column;
    border-radius: var(--card-radius);
    box-shadow: 0 4px 4px rgba(0, 0, 0, 0.25);
    overflow: hidden;
    cursor: pointer;
    transition: all var(--transition);
    &:hover {
      filter: drop-shadow(0 4px 4px rgba(0, 0, 0, 0.5));
    }
  }
  img {
    width: 100%;
    max-height: 13.625rem;
    height: 13.625rem;
    object-fit: cover;
  }
  span {
    padding: 1rem;
    color: var(--white);
    font-size: 1rem;
    font-weight: bold;
    background: var(--purple);
    text-align: center;
  }
  figcaption {
    display: flex;
    flex-direction: column;
    flex-grow: 1;
    justify-content: space-between;
    filter: drop-shadow(0 4px 4px rgba(0, 0, 0, 0.25));
    background: var(--white);
    padding: 1rem;
    transition: filter var(--transition);
  }

  h3 {
    margin: 1rem 0;
    text-align: left;
    display: -webkit-box;
    -webkit-line-clamp: 3;
    -webkit-box-orient: vertical;
    overflow: hidden;
    text-overflow: ellipsis;
  }
  p {
    color: var(--dark-gray);
    margin: 0;
    padding: 0;
    margin-bottom: 1rem;
    display: -webkit-box;
    -webkit-line-clamp: 4;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
  @media (width > 775px) {
    .cards {
      grid-template-columns: repeat(2, 1fr);
    }
  }
  @media (width > 1120px) {
    .cards {
      grid-template-columns: repeat(3, 1fr);
    }
  }
</style>
